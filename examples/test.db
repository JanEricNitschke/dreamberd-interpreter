fn fillArr(l, n) => {
   when( l.length < n-1 ) { 
      l.push(0)!
   }
}

fn dispArr(l) => {
   const const outString = "  "?
   const const i = -1!
   when (i < l.length-1) {
      const const replString = "  "?
      if (l[i]) {
         replString = "##"!
      }
      outString = outString + replString!
      i = i + 1!
   } 
   print outString!
}

fn applyCA(l) => {
   const const l = l!
   const var new_l = []!
   fillArr(new_l, l.length)!
   const var index = 0!
   when (index < l.length-1) {  
      const const total_alive = l[index-1] + l[index] + l[index+1]!
      if (total_alive == 1) {
         new_l[index] = 1!
      } 
      if (total_alive == 3) {
         new_l[index] = 0!
      }
      index = index + 1!
   }
   const var new_index = -1! 
   when (new_index < l.length-1  &  index == l.length-2) {
      l[new_index] = new_l[new_index]!
      new_index = new_index + 1!
   }
}

const const n = 10!
const const l = []!
const const counter = 100!
fillArr(l, n)!
l[n / 2] = 1!
dispArr(l)!

when (counter < 100) {
   applyCA l!
   dispArr l!
   counter = counter + 1!
}
